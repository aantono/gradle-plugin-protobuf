println """\
Welcome to Gradle $gradle.gradleVersion - http://www.gradle.org
Gradle home is set to: $gradle.gradleHomeDir
Gradle user directory is set to: $gradle.gradleUserHomeDir

Base directory: $projectDir
Running script ${relativePath(buildFile)}
"""

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'git'

apply plugin: 'signing'

group = 'ws.antonov.gradle.plugins'
version = '0.7'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.1.0'
    }
}

test {
    //jvmArgs '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    //debug true
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    testCompile group: 'junit', name: 'junit', version: '4.8.1'
    groovy localGroovy()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.3'
}

project.setProperty("signing.secretKeyRingFile", new File("${System.properties['user.home']}/.gnupg/secring.gpg"))

task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn:groovydoc) {
     classifier = 'groovydoc'
     from groovydoc.destinationDir
}

artifacts {
     archives sourcesJar
     archives groovydocJar
}

signing {
     required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
     sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      repository(url: "http://oss.sonatype.org/service/local/staging/deploy/maven2/") {
      //repository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: System.getProperty('nexusUser'), password: System.getProperty('nexusPassword'))
      }
      pom.project {
        name project.name
        description "Gradle build plugin to handle Protocol Buffers automated code generation and compilation"
        url "https://github.com/aantono/gradle-plugin-protobuf"
        licenses {
          license {
            name "New BSD License"
            url "http://www.opensource.org/licenses/bsd-license.php"
          }
        }
        developers {
          developer {
            id "aantono"
            name "Alex Antonov"
            email "alex@antonov.ws"
          }
          developer {
            id "valkolovos"
            name "Val Kolovos"
            email "valkolovos@yahoo.com"
          }
          developer {
            id "mleinartas"
            name "Michael Leinartas"
            email "mleinartas@gmail.com"
          }
        }
        scm {
          connection "scm:git:git://github.com/aantono/gradle-plugin-protobuf.git"
          developerConnection "scm:git:git@github.com:aantono/gradle-plugin-protobuf.git"
          url "https://github.com/aantono/gradle-plugin-protobuf"
        }
      }
    }
  }
}
